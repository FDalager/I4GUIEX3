{"remainingRequest":"C:\\Users\\sebbe\\source\\repos\\I4GUIEX3\\ModelsApi\\ModelWebApp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\sebbe\\source\\repos\\I4GUIEX3\\ModelsApi\\ModelWebApp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\sebbe\\source\\repos\\I4GUIEX3\\ModelsApi\\ModelWebApp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\sebbe\\source\\repos\\I4GUIEX3\\ModelsApi\\ModelWebApp\\src\\components\\CreateNewModel.vue?vue&type=template&id=7c067235&scoped=true&","dependencies":[{"path":"C:\\Users\\sebbe\\source\\repos\\I4GUIEX3\\ModelsApi\\ModelWebApp\\src\\components\\CreateNewModel.vue","mtime":1589628654792},{"path":"C:\\Users\\sebbe\\source\\repos\\I4GUIEX3\\ModelsApi\\ModelWebApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589616163103},{"path":"C:\\Users\\sebbe\\source\\repos\\I4GUIEX3\\ModelsApi\\ModelWebApp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1589616169359},{"path":"C:\\Users\\sebbe\\source\\repos\\I4GUIEX3\\ModelsApi\\ModelWebApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589616163103},{"path":"C:\\Users\\sebbe\\source\\repos\\I4GUIEX3\\ModelsApi\\ModelWebApp\\node_modules\\vue-loader\\lib\\index.js","mtime":1589616169358}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"md-layout-item\" }, [\n    _c(\n      \"form\",\n      { attrs: { id: \"m-app\" }, on: { submit: _vm.checkForm } },\n      [\n        _c(\"md-header\", [\n          _c(\"div\", { staticClass: \"md-title\" }, [_vm._v(\"Create New Model\")])\n        ]),\n        _c(\n          \"md-content\",\n          [\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"firstname\" } }, [\n                  _vm._v(\"First Name\")\n                ]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: {\n                    type: \"text\",\n                    \"md-options\": _vm.countries,\n                    id: \"firstname\"\n                  },\n                  model: {\n                    value: _vm.model.firstname,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"firstname\", $$v)\n                    },\n                    expression: \"model.firstname\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"lastname\" } }, [\n                  _vm._v(\"Last Name\")\n                ]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"lastname\" },\n                  model: {\n                    value: _vm.model.lastname,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"lastname\", $$v)\n                    },\n                    expression: \"model.lastname\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"email\" } }, [_vm._v(\"Email\")]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"email\" },\n                  model: {\n                    value: _vm.model.email,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"email\", $$v)\n                    },\n                    expression: \"model.email\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"phoneno\" } }, [\n                  _vm._v(\"Phone Number\")\n                ]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"phoneno\" },\n                  model: {\n                    value: _vm.model.phoneno,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"phoneno\", $$v)\n                    },\n                    expression: \"model.phoneno\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"addresline1\" } }, [\n                  _vm._v(\"Addres Line 1\")\n                ]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"addresline1\" },\n                  model: {\n                    value: _vm.model.addresline1,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"addresline1\", $$v)\n                    },\n                    expression: \"model.addresline1\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"addresline2\" } }, [\n                  _vm._v(\"Addres Line 2\")\n                ]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"adressline2\" },\n                  model: {\n                    value: _vm.model.addresline2,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"addresline2\", $$v)\n                    },\n                    expression: \"model.addresline2\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"zip\" } }, [_vm._v(\"Zip\")]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"zip\" },\n                  model: {\n                    value: _vm.model.zip,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"zip\", $$v)\n                    },\n                    expression: \"model.zip\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"city\" } }, [_vm._v(\"City\")]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"city\" },\n                  model: {\n                    value: _vm.model.city,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"city\", $$v)\n                    },\n                    expression: \"model.city\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"country\" } }, [_vm._v(\"Country\")]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: {\n                    type: \"text\",\n                    \"md-options\": _vm.countries,\n                    id: \"country\"\n                  },\n                  model: {\n                    value: _vm.model.country,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"country\", $$v)\n                    },\n                    expression: \"model.country\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"birthdate\" } }, [\n                  _vm._v(\"Birthdate\")\n                ]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"birthdate\" },\n                  model: {\n                    value: _vm.model.birthdate,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"birthdate\", $$v)\n                    },\n                    expression: \"model.birthdate\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"nationality\" } }, [\n                  _vm._v(\"Nationality\")\n                ]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"nationality\" },\n                  model: {\n                    value: _vm.model.nationality,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"nationality\", $$v)\n                    },\n                    expression: \"model.nationality\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"height\" } }, [_vm._v(\"Height\")]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"height\" },\n                  model: {\n                    value: _vm.model.height,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"height\", $$v)\n                    },\n                    expression: \"model.height\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"shoesize\" } }, [\n                  _vm._v(\"Shoesize\")\n                ]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"shoesize\" },\n                  model: {\n                    value: _vm.model.shoesize,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"shoesize\", _vm._n($$v))\n                    },\n                    expression: \"model.shoesize\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"haircolor\" } }, [\n                  _vm._v(\"Haircolor\")\n                ]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"haircolor\" },\n                  model: {\n                    value: _vm.model.haircolor,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"haircolor\", $$v)\n                    },\n                    expression: \"model.haircolor\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"eyecolor\" } }, [\n                  _vm._v(\"Eyecolor\")\n                ]),\n                _c(\"md-input\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"eyecolor\" },\n                  model: {\n                    value: _vm.model.eyecolor,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"eyecolor\", $$v)\n                    },\n                    expression: \"model.eyecolor\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"md-field\",\n              [\n                _c(\"label\", { attrs: { for: \"comment\" } }, [_vm._v(\"Comment\")]),\n                _c(\"md-textarea\", {\n                  staticClass: \"form-group\",\n                  attrs: { type: \"text\", id: \"comment\" },\n                  model: {\n                    value: _vm.model.comment,\n                    callback: function($$v) {\n                      _vm.$set(_vm.model, \"comment\", $$v)\n                    },\n                    expression: \"model.comment\"\n                  }\n                })\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _c(\n          \"md-action\",\n          [\n            _c(\"md-button\", { attrs: { type: \"submit\" } }, [\n              _vm._v(\"Add New Model\")\n            ])\n          ],\n          1\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}